<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.sig.school</groupId>
  <artifactId>schooldb</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <packaging>pom</packaging>
  <modules>
  	<module>ghanadb</module>
  	<module>common</module>
  </modules>
  
  <parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.4.0.RELEASE</version>
	</parent>

	<properties>
		<main.basedir>${basedir}/../..</main.basedir>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
		<java.version>1.8</java.version>
		<start-class>generic.mongo.microservices.GhanaDBApplication</start-class>
	</properties>
	
	<dependencies>
		<!-- Core Spring Boot -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-websocket</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-messaging</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-aop</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-mongodb</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>de.flapdoodle.embed</groupId>
			<artifactId>de.flapdoodle.embed.mongo</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-mail</artifactId>
		</dependency>

		<!-- https://mvnrepository.com/artifact/org.apache.velocity/velocity -->
		<dependency>
			<groupId>org.apache.velocity</groupId>
			<artifactId>velocity</artifactId>
		</dependency>

		<dependency>
			<groupId>com.jayway.jsonpath</groupId>
			<artifactId>json-path</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger2</artifactId>
			<version>2.2.2</version>
		</dependency>
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger-ui</artifactId>
			<version>2.2.2</version>
		</dependency>
		<dependency>
			<groupId>org.webjars</groupId>
			<artifactId>bootstrap</artifactId>
			<version>3.3.5</version>
		</dependency>

		<dependency>
			<groupId>com.google.code.gson</groupId>
			<artifactId>gson</artifactId>
		</dependency>

		<dependency>
			<groupId>com.github.jsqlparser</groupId>
			<artifactId>jsqlparser</artifactId>
			<version>0.9</version>
		</dependency>

		<dependency>
			<groupId>org.freemarker</groupId>
			<artifactId>freemarker</artifactId>
		</dependency>

		<!-- https://mvnrepository.com/artifact/com.mashape.unirest/unirest-java -->
		<dependency>
			<groupId>com.mashape.unirest</groupId>
			<artifactId>unirest-java</artifactId>
			<version>1.4.9</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/org.quartz-scheduler/quartz -->
		<dependency>
			<groupId>org.quartz-scheduler</groupId>
			<artifactId>quartz</artifactId>
			<version>2.2.3</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/org.quartz-scheduler/quartz-jobs -->
		<dependency>
			<groupId>org.quartz-scheduler</groupId>
			<artifactId>quartz-jobs</artifactId>
			<version>2.2.3</version>
		</dependency>

		<!-- Java library to create thumbnails of images --> 
		<dependency>
			<groupId>org.imgscalr</groupId>
			<artifactId>imgscalr-lib</artifactId>
			<version>4.2</version>
		</dependency>
	    
    
	    <!-- IM4java library to create thumbnails using Image Magick extenal process-->
	  	<dependency>
		  <groupId>org.im4java</groupId>
		  <artifactId>im4java</artifactId>
		  <version>1.4.0</version>
		</dependency>
		
	    <!--  JAI library to read CYMK images -->
	    <dependency>    
		  <groupId>com.sun.media</groupId>
		  <artifactId>jai-codec</artifactId>
		  <version>1.1.3</version>
	    </dependency>
		
	</dependencies>
	
	<repositories>
      <repository>
	        <id>thirdparty-releases</id>
	        <name>JBoss Thirdparty Releases</name>
	        <url>https://repository.jboss.org/nexus/content/repositories/thirdparty-releases</url>
        </repository>
        
        <repository>
            <id>repository</id>
            <name>repository</name>
            <url>https://repository.jboss.org/maven2/</url>
        </repository>
  </repositories>
  
	<!-- 
	<distributionManagement>
		<repository>
			<id>ssh-aws</id>
			<url>scpexe://ec2-35-160-105-209.us-west-2.compute.amazonaws.com</url>
		</repository>
	</distributionManagement>
	-->
	
	<profiles>
    <profile>
        <id>heroku</id>
        <activation>
            <property>
                <name>heroku</name>
            </property>
        </activation>
        <build>
            <plugins>
                <plugin>
                    <groupId>com.heroku.sdk</groupId>
                    <artifactId>heroku-maven-plugin</artifactId>
                    <version>1.1.1</version>
                    <configuration>
                        <appName>mschooldb</appName>
                        <includeTarget>true</includeTarget>
                        <includes>
                            <include>ghanadb/target/ghanadb-0.0.1.jar</include>
                        </includes>
                        <jdkVersion>1.8</jdkVersion>
                        <processTypes>
                            <web>java -jar ghanadb/target/ghanadb-0.0.1.jar --spring.profiles.active=dev</web>
                        </processTypes>
                    </configuration>
                    <executions>
                        <execution>
                            <phase>verify</phase>
                            <goals>
                                <goal>deploy</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </build>
    </profile>
</profiles>

</project>
